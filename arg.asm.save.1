%include "linux64.asm"
 
section .data
    I1 DQ 0x0000000000000000
    texta db "Argument(s): ",0
    textb1 db "Argument #",0
    textb2 db ": ",0
    newline db 10,0
 
section .bss
    argc resb 8
    argPos resb 8
 
section .text
    global _start
 
_start:
    mov eax, 0
    mov [argPos], eax
 
    print texta
    pop eax
    mov [argc], eax
    printVal eax
    print newline
 
_printArgsLoop:
    print textb1
    mov eax, [argPos]
    inc eax
    mov [argPos], eax
    printVal eax
    print textb2
    pop eax
    call char_to_bin
    mov r8,eax
    print eax
    print newline
    mov [I1],eax
    mov rax, [argPos]
    mov rbx, [argc]
    cmp rax, ebx
    jne _printArgsLoop

char_to_bin:

    cmp eax, 61h
    jb Upper
    sub eax,61h
    jmp done

    Upper:
        cmp rax, 41h
        jb Digit
        sub rax, 41h
        jmp done

    Digit:
        sub rax,30h

    done:
        ret

Exit:
