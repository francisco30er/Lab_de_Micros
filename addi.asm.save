
section .data

I1 DQ 0x0000000020220001; EN ESTOS DATOS SE SIMULA QUE EL REGISTRO RD ES EL NUMERO DOS ...0001 0000 0001 0001,
R0 DQ 0x0000000000000000
R1 DQ 0x0000000000000001
R2 DQ 0x0000000000000005
R3 DQ 0X0000000000000000
file db "archivo4.txt"


section .bss

text resb 100

section .text

global _start

_start:
	
	

Add:

	;inmmediate
	mov r8, [I1]; CARGA LA INSTRUCCION
	mov r9, 0xffff; MASCARA PARA RD
	and r8, r9; MASCARA
	mov r9r8

	;REGISTRO RT
	mov r8, [I1]; CARGA LA INSTRUCCION
        mov r10, 0x1f0000; MASCARA PARA RT
        and r8, r10; MASCARA
        sar r8, 16; CORRIMIENTO A LA DERECHA PARA OBTENER EL NUMERO DEL REGISTRO

        mov rax, 0x8; PARA MOVERSE EN MEMORIA DEBE SER DE OCHO EN OCHO
        mul r8; SE MULTIPLICA EL NUMERO DE REGISTRO POR OCHO, EL RESULTADO SE GUARDA EN RAX
        mov r10, R0; SE CARGA LA DIRECCION DEL REGISTRO BASE EN MEMORIA
        add r10, rax; SE LE SUMA EL OFFSET
        mov r13,[r10]; SE CARGA EL VALOR EN ESE REGISTRO
       


	;REGISTRO RS

	mov r8, [I1]; CARGA LA INSTRUCCION
        mov r11, 0x03e00000; MASCARA PARA RS
        and r8, r11; MASCARA
        sar r8, 21; CORRIMIENTO A LA DERECHA PARA OBTENER EL NUMERO DEL REGISTRO

        mov rax, 0x8; PARA MOVERSE EN MEMORIA DEBE SER DE OCHO EN OCHO
        mul r8; SE MULTIPLICA EL NUMERO DE REGISTRO POR OCHO, EL RESULTADO SE GUARDA EN RAX
        mov r11, R0; SE CARGA LA DIRECCION DEL REGISTRO BASE EN MEMORIA
        add r11, rax; SE LE SUMA EL OFFSET
        mov r14,[r11]; SE CARGA EL VALOR EN ESE REGISTRO
        

	;OPERACION DE SUMA
	mov r8,0x0;LIMPIA EL REGISTRO R8
	add r14,r9
	mov QWORD [r13],r14
	mov r13, [r13]


Exit:
	mov rax,60
	mov rdi,0
	syscall
