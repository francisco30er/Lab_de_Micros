%include "linux64.asm"
 
section .data
    texta db "Argument(s): ",0
    textb1 db "Argument #",0
    textb2 db ": ",0
    newline db 10,0
 
section .bss
    section .bss
    digitSpace resb 100
    digitSpacePos resb 8
    printSpace resb 8
%macro print 1
    mov rax, %1
    mov [printSpace], rax
    mov rbx, 0
%%printLoop:
    mov cl, [rax]
    cmp cl, 0
    je %%endPrintLoop
    inc rbx
    inc rax
    jmp %%printLoop
%%endPrintLoop:
    mov rax, SYS_WRITE
    mov rdi, STDIN
    mov rsi, [printSpace]

    argc resb 8
    argPos resb 8
 
section .text
    global _start
 
_start:
    mov rax, 0
    mov [argPos], rax 
    print texta
    pop rax
    mov [argc], rax
    printVal rax
    print newline
 
_printArgsLoop:
    print textb1
    mov rax, [argPos]
    inc rax
    mov [argPos], rax
    printVal rax
    print textb2
    pop rax
    mov rcx,rax
    print rax
    print rcx
    print newline
    mov rax, [argPos]
    mov rbx, [argc]
    cmp rax, rbx
    jne _printArgsLoop

Exit:

;char_to_bin:
;    cmp rax, 61h
;    jb Upper
;    sub rax,61h
;    jmp done

;    Upper:
;        cmp rax, 41h
;        jb Digit
;        sub rax, 41h
;        jmp done

;    Digit:
;        sub rax,30h

;    done:
;        ret

;Exit:
